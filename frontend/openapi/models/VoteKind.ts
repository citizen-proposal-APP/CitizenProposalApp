/* tslint:disable */
/* eslint-disable */
/**
 * Citizen Proposal App
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


/**
 * Represents different types of "vote". Usually used when querying the votes on a post.
 * @export
 */
export const VoteKind = {
    None: 'none',
    Like: 'like',
    Dislike: 'dislike'
} as const;
export type VoteKind = typeof VoteKind[keyof typeof VoteKind];


export function instanceOfVoteKind(value: any): boolean {
    for (const key in VoteKind) {
        if (Object.prototype.hasOwnProperty.call(VoteKind, key)) {
            if (VoteKind[key as keyof typeof VoteKind] === value) {
                return true;
            }
        }
    }
    return false;
}

export function VoteKindFromJSON(json: any): VoteKind {
    return VoteKindFromJSONTyped(json, false);
}

export function VoteKindFromJSONTyped(json: any, ignoreDiscriminator: boolean): VoteKind {
    return json as VoteKind;
}

export function VoteKindToJSON(value?: VoteKind | null): any {
    return value as any;
}

export function VoteKindToJSONTyped(value: any, ignoreDiscriminator: boolean): VoteKind {
    return value as VoteKind;
}

