/* tslint:disable */
/* eslint-disable */
/**
 * Citizen Proposal App
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * The DTO used as the response body of tag queries.
 * @export
 * @interface TagQueryResponseDto
 */
export interface TagQueryResponseDto {
    /**
     * The primary key.
     * @type {number}
     * @memberof TagQueryResponseDto
     */
    id: number;
    /**
     * The name of this tag.
     * @type {string}
     * @memberof TagQueryResponseDto
     */
    name: string;
    /**
     * The type of this tag. Possible values are "none", "department", and "topic".
     * @type {string}
     * @memberof TagQueryResponseDto
     */
    tagType: string;
}

/**
 * Check if a given object implements the TagQueryResponseDto interface.
 */
export function instanceOfTagQueryResponseDto(value: object): value is TagQueryResponseDto {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('tagType' in value) || value['tagType'] === undefined) return false;
    return true;
}

export function TagQueryResponseDtoFromJSON(json: any): TagQueryResponseDto {
    return TagQueryResponseDtoFromJSONTyped(json, false);
}

export function TagQueryResponseDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): TagQueryResponseDto {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'name': json['name'],
        'tagType': json['tagType'],
    };
}

export function TagQueryResponseDtoToJSON(json: any): TagQueryResponseDto {
    return TagQueryResponseDtoToJSONTyped(json, false);
}

export function TagQueryResponseDtoToJSONTyped(value?: TagQueryResponseDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'name': value['name'],
        'tagType': value['tagType'],
    };
}

