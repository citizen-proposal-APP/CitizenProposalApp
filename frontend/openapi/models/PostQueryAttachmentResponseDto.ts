/* tslint:disable */
/* eslint-disable */
/**
 * Citizen Proposal App
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * The DTO used to associate an attachment's ID and filename when querying posts.
 * @export
 * @interface PostQueryAttachmentResponseDto
 */
export interface PostQueryAttachmentResponseDto {
    /**
     * The ID of the attachment.
     * @type {number}
     * @memberof PostQueryAttachmentResponseDto
     */
    id: number;
    /**
     * The filename of the attachment.
     * @type {string}
     * @memberof PostQueryAttachmentResponseDto
     */
    filename: string;
}

/**
 * Check if a given object implements the PostQueryAttachmentResponseDto interface.
 */
export function instanceOfPostQueryAttachmentResponseDto(value: object): value is PostQueryAttachmentResponseDto {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('filename' in value) || value['filename'] === undefined) return false;
    return true;
}

export function PostQueryAttachmentResponseDtoFromJSON(json: any): PostQueryAttachmentResponseDto {
    return PostQueryAttachmentResponseDtoFromJSONTyped(json, false);
}

export function PostQueryAttachmentResponseDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): PostQueryAttachmentResponseDto {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'filename': json['filename'],
    };
}

export function PostQueryAttachmentResponseDtoToJSON(json: any): PostQueryAttachmentResponseDto {
    return PostQueryAttachmentResponseDtoToJSONTyped(json, false);
}

export function PostQueryAttachmentResponseDtoToJSONTyped(value?: PostQueryAttachmentResponseDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'filename': value['filename'],
    };
}

