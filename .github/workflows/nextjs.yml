# This workflow will build a Next.js site
#
# To get started with Next.js see: https://nextjs.org/docs/getting-started
#
name: Build Next.js site

on:
  push:
    branches: ["main", "frontend"]
  pull_request:
    branches: ["main", "frontend"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

permissions:
  contents: read

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow the building process to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: "frontend"
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Detect package manager
        id: detect-package-manager
        run: |
          if [ -f "yarn.lock" ]; then
            echo "dependency=yarn.lock"         | tee -a $GITHUB_OUTPUT
            echo "manager=yarn"                 | tee -a $GITHUB_OUTPUT
            echo "command=install"              | tee -a $GITHUB_OUTPUT
            echo "runner=yarn"                  | tee -a $GITHUB_OUTPUT
            exit 0
          elif [ -f "package.json" ]; then
            echo "dependency=package-lock.json" | tee -a $GITHUB_OUTPUT
            echo "manager=npm"                  | tee -a $GITHUB_OUTPUT
            echo "command=ci"                   | tee -a $GITHUB_OUTPUT
            echo "runner=npx --no-install"      | tee -a $GITHUB_OUTPUT
            exit 0
          else
            echo "Unable to determine package manager"
            exit 1
          fi
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "22"
          cache: ${{ steps.detect-package-manager.outputs.manager }}
          cache-dependency-path: "**/${{ steps.detect-package-manager.outputs.dependency }}"
      - name: Restore cache
        uses: actions/cache@v4
        with:
          path: |
            .next/cache
          # Generate a new cache whenever packages or source files change.
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-
      - name: Install dependencies
        run: ${{ steps.detect-package-manager.outputs.manager }} ${{ steps.detect-package-manager.outputs.command }}
      - name: Build with Next.js
        run: ${{ steps.detect-package-manager.outputs.runner }} next build
